{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/ListTask.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","defaultProps","Header","title","onToggleForm","showFormProps","Task","id","task","onDelete","onToggle","style","backgroundColor","borderLeft","status","onDoubleClick","desc","cursor","ListTask","tasks","map","AddTask","onAdd","useState","setTask","remainder","setRemainder","isError","setError","onSubmit","e","preventDefault","alert","border","type","placeholder","value","onChange","target","checked","display","currentTarget","App","showForm","setForm","setTasks","new_task","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.072ba612.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ text, color, onClick }) => {\n\n    return (\n        <button onClick={onClick} className={color}>{text} </button>\n    )\n}\n\nButton.defaultProps = {\n    color: \"btn btn-outline-dark\"\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button","import Button from \"./Button\";\n\nconst Header = ({ title, onToggleForm, showFormProps }) => {\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"col-sm-10\">{title}</h2>\n            <Button text={showFormProps ? \"close\" : \"open\"} color=\"btn btn-outline-dark\" onClick={onToggleForm}/>\n        </div>\n    )\n}\n\nexport default Header","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ id, task, onDelete, onToggle }) => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row p-2 mt-2\" style={{ backgroundColor: \"rgb(224, 224, 209)\", borderLeft: task.status ? \"5px solid green\" : \"\" }} onDoubleClick={() => onToggle(task.id)}>\n                <div className=\"col-sm-10\">\n                    <h5>{task.desc} </h5>\n                </div>\n                <div className=\"col-sm-2\">\n                    <FaTimes onClick={() => onDelete(task.id)} style={{ color: \"red\", cursor: \"pointer\" }}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task';\n\nconst ListTask = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <div className=\"mt-5\">\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>))}\n        </div>\n    )\n}\n\nexport default ListTask","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n\n    const [task, setTask] = useState('');\n    const [remainder, setRemainder] = useState(false);\n    const [isError, setError] = useState(false);\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        \n        if(!task){\n            setError(true);\n            alert(\"Task is required ..\");\n            return;\n        }\n\n        onAdd({ task, remainder });\n\n        setTask('')\n        setRemainder(false)\n        setError(false)\n    }\n\n    return (\n        <form className=\"mt-5\" onSubmit={onSubmitForm}>\n            <div className=\"form-group\" style={{ border: isError ? \"4px solid red\" : \"\" }}>\n                <input type=\"text\" className=\"form-control\" placeholder=\"enter task\" value={task} onChange={(e) => setTask(e.target.value)}/>\n            </div>\n            <div className=\"form-group form-check\">\n                <label className=\"form-check-label\">\n                    <input className=\"form-check-input\" checked={remainder} type=\"checkbox\" style={{ display: \"inline-block\" }} value={remainder} onChange={(e) => setRemainder(e.currentTarget.checked)}/>\n                    <h6 style={{ display: \"inline-block\" }}>Set Remainder</h6>\n                </label>\n            </div>\n            <input className=\"btn btn-outline-dark btn-block\" type=\"submit\" value=\"Save\"/>\n        </form>\n    )\n}\n                             \nexport default AddTask","import Header from './components/Header';\nimport {useState} from 'react';\nimport ListTask from './components/ListTask';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\n  const [showForm, setForm] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      desc: \"this is task1\",\n      status: true\n    },\n    {\n      id: 2,\n      desc: \"this is task2\",\n      status: false\n    },\n    {\n      id: 3,\n      desc: \"this is task3\",\n      status: false\n    }\n  ])\n\n  const deleteTodo = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  const toggleStatus = (id) => {\n    setTasks(\n      tasks.map((task) => task.id === id ? { ...task, status: !task.status } : task)\n    )\n  }\n\n  const addTask = (task) => {\n    const new_task = {\n      id: tasks.length + 1,\n      desc: task.task,\n      status: task.remainder\n    }\n    \n    setTasks([...tasks, new_task]);\n  }\n\n  const toggleForm = () => {\n    setForm(!showForm);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"mt-5 col-sm-6 offset-sm-3 col-lg-6 offset-lg-3 col-xs-6 offset-xs-3 p-5\" style={{ border: \"2px solid grey\" }}>\n        <Header title=\"TODO APP\" onToggleForm={toggleForm} showFormProps={showForm}/>\n        {showForm && <AddTask onAdd={addTask}/>}\n        { tasks && tasks.length && tasks.length > 0 ? <ListTask tasks={tasks} onDelete={deleteTodo} onToggle={toggleStatus}/> : <h5 className=\"mt-5\">No Todos Found</h5> }\n      </div> \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}